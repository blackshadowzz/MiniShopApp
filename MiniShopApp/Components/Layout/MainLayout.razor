@inherits LayoutComponentBase
@attribute [StreamRendering(false)]
@* Required *@
<MudThemeProvider @ref="_mudThemeProvider" @bind-IsDarkMode="_isDarkMode" Theme="_theme"/>
<MudPopoverProvider />
@* Needed for dialogs *@
<MudDialogProvider />
@* Needed for snackbars *@
<MudSnackbarProvider />



<MudLayout>
    <MudAppBar Elevation="1" Dense="false">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        Mini Order App
        <MudSpacer />
        <MudSwitch @bind-Value="_isDarkMode" Color="Color.Primary" Class="ma-4" T="bool" Label="Light/Dark" />

        <MudMenu>
            <ActivatorContent>
                <MudAvatar>
                    <MudImage Src="images/MiniLogo.jpg" />
                </MudAvatar>
            </ActivatorContent>
            <ChildContent>
                <MudMenuItem Label="Profile" />
                <MudMenuItem Label="My account" />
                <MudMenuItem Label="Logout" />
            </ChildContent>
        </MudMenu>
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen" ClipMode="DrawerClipMode.Docked" Elevation="1" Variant="@DrawerVariant.Responsive">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6" Class="px-4">Mini App</MudText>
            
        </MudDrawerHeader>
            <MudNavMenu Class="mud-width-full">
                <MudNavLink Href="/" Icon="@Icons.Material.Filled.Dashboard">Dashboard</MudNavLink>
                <MudNavGroup Title="Orders" Icon="@Icons.Material.Filled.Lan">
                    <MudNavLink Href="/orders/views" Icon="@Icons.Material.Filled.Storefront" IconColor="Color.Success">Orders</MudNavLink>
                    <MudNavLink Icon="@Icons.Material.Filled.ReceiptLong" IconColor="Color.Info">Order Details</MudNavLink>
                </MudNavGroup>
                <MudNavGroup Title="Products" Icon="@Icons.Material.Filled.ListAlt">
                    <MudNavLink Href="/products" Icon="@Icons.Material.Filled.ListAlt" IconColor="Color.Success">Product</MudNavLink>
                    <MudNavLink Href="/categories" Icon="@Icons.Material.Filled.Category" IconColor="Color.Info">Category</MudNavLink>
                </MudNavGroup>
                <MudNavLink Href="/table" Icon="@Icons.Material.Filled.TableBar">Table</MudNavLink>
                
                <MudNavGroup Title="Customers" Icon="@Icons.Material.Filled.Groups2">
                    <MudNavLink Href="/" Icon="@Icons.Material.Filled.Groups3" IconColor="Color.Success">Customer</MudNavLink>
                    <MudNavLink Href="/" Icon="@Icons.Material.Filled.Security" IconColor="Color.Info">Security</MudNavLink>
                </MudNavGroup>
                <MudNavGroup Title="User management" Icon="@Icons.Material.Filled.Group">
                    <MudNavLink Href="/" Icon="@Icons.Material.Filled.ManageAccounts" IconColor="Color.Success">User</MudNavLink>
                    <MudNavLink Href="/" Icon="@Icons.Material.Filled.Security" IconColor="Color.Info">Security</MudNavLink>
                </MudNavGroup>
                <MudNavGroup Title="Settings" Icon="@Icons.Material.Filled.Settings">
                    <MudNavLink Href="/settings/user/customer-log" Icon="@Icons.Material.Filled.LockPerson">Customer log</MudNavLink>
                    <MudNavLink Href="/settings/user/telegram-config" Icon="@Icons.Custom.Brands.Telegram">Telegram</MudNavLink>
                    <MudNavLink Href="/" Icon="@Icons.Material.Filled.RoomService" IconColor="Color.Info">Service</MudNavLink>
                    <MudNavLink Href="/" Icon="@Icons.Material.Filled.Info" IconColor="Color.Info">About</MudNavLink>
                </MudNavGroup>
                

            </MudNavMenu>
    </MudDrawer>
    <MudMainContent Class="mt-3">
        <div class="container-fluid">
            @Body
        </div>

    </MudMainContent>
</MudLayout>
@code {
    bool _drawerOpen = true;
    bool IsExpanded = false;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
    private bool _isDarkMode=false;
    private MudThemeProvider? _mudThemeProvider;
    private MudBlazor.MudTheme _theme = new MudBlazor.MudTheme(); // Initialize the required theme

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _theme.PaletteDark = new MudBlazor.PaletteDark() // Use the correct derived class
            {
                Primary = "#673ab7", // Example primary color for dark mode
                Secondary = "#ff4081", // Example secondary color for dark mode
                Background = "#121212", // Example background color for dark mode
                TextPrimary = "#ffffff", // Example text color for dark mode
            };
            // _isDarkMode = await _mudThemeProvider!.GetSystemDarkModeAsync();
            StateHasChanged();
        }
    }
}


